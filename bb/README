Attack Steps

0. Naive
  5+1 states, 2 values, 2 moves ^ 10 labels 
  24^10 = 63 trillion, possible for sigma(5, 2)

1. Determine a canonical numbering of all the machines that's easy to enumerate and refer to the machines by. Should be simple, yet remove many isomorphic machines.
  bbprover claims 150M machines
  zany zoo claims 102,550,546
  our imp gets 276,413,630
  Goal: a list of all the machines to check, and a spot check that many random machines are obviously equivalent to one on the list
(put number here)

1b. Rejecting "active" approaches to machine generation
  Say we only exclude isomorphic machines, how many are left?
  3,2 is 3+1 * 2 * 2 = base 16 with length 3*2 = 6 -> 16^6 = 16,777,216 -> 3440

2. Exclude all machines that halt with <= 4098 (current ones record)
   Run for 47,176,870 steps
(put number here)

3. Exclude all machines with a repeated state
(put number here)

4. Now it's proving time
  a. If they halt, no proof required, just the halting step.
  b. If they repeat state, no proof required, just the repeating step and to which step it repeats.
  c. The rest run for longer than the suspected BB number, and likely don't halt. But how to prove it.
     I think it's all some form of induction.

How can we put the machines in a proof assistant?

https://skelet.ludost.net/bb/nreg.html <-- claims only 43!

